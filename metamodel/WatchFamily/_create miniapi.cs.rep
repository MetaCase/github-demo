Report '_create miniapi.cs'
/* If Windows SDK is not installed, we cannot transform the WSDL to a C# file with SvcUtil, so we instead use this hard-coded version with just the animate function */
'//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5456
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.ServiceModel.ServiceContractAttribute(Namespace="http://metacase.com/wsdl/", ConfigurationName="MetaEditAPIPortType")]
public interface MetaEditAPIPortType
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://metacase.com/MetaEditAPI.animate", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, Use=System.ServiceModel.OperationFormatUse.Encoded)]
    [return: System.ServiceModel.MessageParameterAttribute(Name="result")]
    MENull animate(MEOop receiver, [System.ServiceModel.MessageParameterAttribute(Name="animate")] MEOop animate1);
    
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.2152")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://metacase.com/type")]
public partial class METype
{
    
    private string nameField;
    
    /// <remarks/>
    public string name
    {
        get
        {
            return this.nameField;
        }
        set
        {
            this.nameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.2152")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://metacase.com/type")]
public partial class MENull
{
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.2152")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://metacase.com/type")]
public partial class MEAny
{
    
    private string meTypeField;
    
    private string meValueField;
    
    /// <remarks/>
    public string meType
    {
        get
        {
            return this.meTypeField;
        }
        set
        {
            this.meTypeField = value;
        }
    }
    
    /// <remarks/>
    public string meValue
    {
        get
        {
            return this.meValueField;
        }
        set
        {
            this.meValueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.2152")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://metacase.com/type")]
public partial class MEOop
{
    
    private int areaIDField;
    
    private int objectIDField;
    
    /// <remarks/>
    public int areaID
    {
        get
        {
            return this.areaIDField;
        }
        set
        {
            this.areaIDField = value;
        }
    }
    
    /// <remarks/>
    public int objectID
    {
        get
        {
            return this.objectIDField;
        }
        set
        {
            this.objectIDField = value;
        }
    }
}

public interface MetaEditAPIPortTypeChannel : MetaEditAPIPortType, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
public partial class MetaEditAPIPortTypeClient : System.ServiceModel.ClientBase<MetaEditAPIPortType>, MetaEditAPIPortType
{
    
    public MetaEditAPIPortTypeClient()
    {
    }
    
    public MENull animate(MEOop receiver, MEOop animate1)
    {
        return base.Channel.animate(receiver, animate1);
    }
    
}
'
endreport