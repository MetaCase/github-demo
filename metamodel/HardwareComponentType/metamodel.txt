==========================
Graph Type
==========================
HardwareComponentType
	EAST-ADL version M2.1.12
	HardwareModeling contains the elements to model physical entities of the embedded electrical/electronic system.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Type: HardwareComponentType
		Type is a mandatory field.
		---------------------------------------------
	Show report: String
		Choosing the LiveCheck output choise (bottom pane of the diagram editor)
		---------------------------------------------
	Show allocated prototypes: Boolean
	Show oid: Boolean

==========================
Object Types
==========================
HardwareComponentPrototype
	HardwareComponentPrototype presents an element of the hardware architecture. Its type is set in the subgraph and can be one of the following:
	The Actuator prototype is the element that represents electrical actuators, such as valves, motors, lamps, brake units, etc. It refers to the type definition via decomposed submodel.
	The Node protototype represents an ECU, i.e. an Electronic Control Unit, and an allocation target of FunctionPrototypes. Node represents the computer nodes of the embedded electrical/electronic system. Nodes consist of processor(s) and may be connected to sensors, actuators and other ECUs via a BusConnector. It refers to the type definition via decomposed submodel.
	ElectricalComponent prototype represents a hardware element that supplies power. It refers to the type definition via decomposed submodel.
	Sensor prototype represents a hardware entity for digital or analog sensor elements. It refers to the type definition via decomposed submodel.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text
HardwarePortConnector
	The HardwarePortConnector represents a logical connection that carries data from any sender to all receivers.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	BusSpeed: String
		The net bus speed in bits per second, this is a mandatory value.
		---------------------------------------------
	BusType: String
		HardwareBusKind is an enumeration type representing different kinds of busses.
		---------------------------------------------
	Description: Text
	Connectors: OrderedCollection (HardwareConnector)
		Collection of the wires using the HardwarePortConnector.
		---------------------------------------------
CommunicationHardwarePinIn
	CommunicationHardwarePinIn represents a directed electrical connection point that can be used to define how the wire harness is logically defined. 
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Description: Text
CommunicationHardwarePinInOut
	CommunicationHardwarePinInOut represents a bidirected electrical connection point that can be used to define how the wire harness is logically defined. 
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Description: Text
CommunicationHardwarePinOut
	CommunicationHardwarePinOut represents a directed electrical connection point that can be used to define how the wire harness is logically defined. 
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Description: Text
PowerHardwarePinIn
	A PowerHardwarePinIn provides a point for consuming energy.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Description: Text
PowerHardwarePinInOut
	A PowerHardwarePinInOut provides a point for providing or consuming energy.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Description: Text
PowerHardwarePinOut
	A PowerHardwarePinOut provides a point for provding energy.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Description: Text
IOHardwarePinIn
	IOHardwarePin represents a directed electrical connection point for digital or analog I/O.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Type: String
		Defines whether the IOHardwarePin is digital, analog, PWM (Pulse Width Modulated) or other
		---------------------------------------------
	Description: Text
IOHardwarePinInOut
	IOHardwarePin represents a bi-directional electrical connection point for digital or analog I/O.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Type: String
		Defines whether the IOHardwarePin is digital, analog, PWM (Pulse Width Modulated) or other
		---------------------------------------------
	Description: Text
IOHardwarePinOut
	IOHardwarePin represents a directed electrical connection point for digital or analog I/O.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Type: String
		Defines whether the IOHardwarePin is digital, analog, PWM (Pulse Width Modulated) or other
		---------------------------------------------
	Description: Text
Requirement
	The Requirement represents a capability or condition that must (or should) be satisfied.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Formalism: String
		Specifies the language used for the requirement statement. 
		---------------------------------------------
	Url: String
		Reference to possible external file containing the requirement statement. 
		---------------------------------------------
	Modes: OrderedCollection (Mode)
		The mode(s) where this requirement is valid.
		---------------------------------------------
	Description: Text
QualityRequirement
	QualityRequirement element represent a requirement which is non-functional. 
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Formalism: String
		Specifies the language used for the requirement statement. 
		---------------------------------------------
	Url: String
		Reference to possible external file containing the requirement statement. 
		---------------------------------------------
	Modes: OrderedCollection (Mode)
		The mode(s) where this requirement is valid.
		---------------------------------------------
	Description: Text
	Kind: String
		QualityRequirementKind represents the kind of QualityRequirement given by the definition of the respective Enumeration Literal.
		---------------------------------------------
UserAttributedElement
	UserAttributedElement is used to attach user attribute values to model elements. What user attributes a certain element should be supplied with can be defined beforehand with UserElementTypes.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Values: OrderedCollection (Value)
	Types: OrderedCollection (UserElementType)
	Description: Text
GenericConstraint
	The GenericConstraint denotes a property, requirement, or a validation result for the identified element of the model.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Value: GenericConstraintValue
	Kind: String
	Modes: OrderedCollection (Mode)
		The mode(s) where this requirement is valid.
		---------------------------------------------
	TargetTypes: OrderedCollection (Graph)
	TargetObjects: OrderedCollection (Object)
	TargetRelationships: OrderedCollection (Relationship)
	Description: Text
Comment
	Commenting the metamodel or model, can be connected to all objects.
	---------------------------------------------
	Comment: String
	Description: Text

==========================
Relationship Types
==========================
HardwareConnector
	Hardware connectors represent wires that electrically connect the hardware components through its pins.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
	Name: String
	Description: Text
Satisfy
	The Satisfy relationship signifies a satisfied requirement/satisfied by relationship between a set of Requirements and a set of satisfying entities.
	---------------------------------------------
Realization
	Realization specifies a mapping between two elements and how the other element is realizing the functionality or feature. For example, how analysis level function is been realized by the design level function.
	---------------------------------------------
DeriveRequirement
	The DeriveRequirement signifies a derived/derived by relationship between Requirements, where the modification of the supplier Requirement may impact the derived client Requirement.
	---------------------------------------------
RequirementsLink
	The RequirementsLink defines a relation from a set of source and target requirements. The Bidirectional attribute defines whether the relation is bidirectional. 
	---------------------------------------------
	Name: String
	Bidirectional: Boolean
		When set to true, the semantic relation represented by this instance of RequirementRelation does not only apply to the direction from source to target (as always) but also in the opposite direction. 
		---------------------------------------------
Comment
	Comment creates a link between comment or constraint and other design element.
	---------------------------------------------

==========================
Role Types
==========================
Comment
CommunicationHardwarePin_From
	CommunicationHardwarePin represents an electrical connection point that can be used to define how the wire harness is logically defined. 
	---------------------------------------------
CommunicationHardwarePin_To
	CommunicationHardwarePin represents an electrical connection point that can be used to define how the wire harness is logically defined. 
	---------------------------------------------
IOHardwarePin_From
	IOHardwarePin represents an electrical connection point for digital or analog I/O.
	---------------------------------------------
IOHardwarePin_To
	IOHardwarePin represents an electrical connection point for digital or analog I/O.
	---------------------------------------------
PowerHardwarePin_From
	PowerHardwarePin represents a pin that is primarily intended for power supply, either providing or consuming energy.
	---------------------------------------------
PowerHardwarePin_To
	PowerHardwarePin represents a pin that is primarily intended for power supply, either providing or consuming energy.
	---------------------------------------------
Realized
RealizedBy
IOPort_To
CommunicationPort_From
CommunicationPort_To
OutPower
IOPort_From
InPower
SatisfiedBy
SatisfiedRequirement
DerivedFrom
	The set of requirements that the client requirement are derived from.
	---------------------------------------------
Derived
	The set of requirements that are derived from the supplier requirement.
	---------------------------------------------

==========================
Extra Types
==========================
_EAST-ADL
	Abstract supertype of all EAST-ADL graph types
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
ActuatorType
	The Actuator is the element that represents electrical actuators, such as valves, motors, lamps, brake units, etc. Non-electrical actuators such as the engine, hydraulics, etc. are considered part of the plant model (environment). Plant models are not part of the Hardware Design Architecture. 
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text
ArrayDatatype
	ArrayDatatype is a datatype for an array of datatypes of the same type.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
	MinLength: String
	MaxLength: String
	Type: _EADatatype
	Description: Text
CompositeDatatype
	A CompositeDatatype represents a non-scalar datatype. The contained datatypePrototypes act as record variables to identify the ordered datatype instances of the tuple (the CompositeDatatype).
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
	DatatypePrototypes: OrderedCollection (EADatatypePrototype)
	Description: Text
EABoolean
	EABoolean is the primitive type that holds two literals: true, false.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
	Description: Text
EADatatypePrototype
	The EADatatypePrototype represents a typed variable. It acts as an appearance of a datatype.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Type: _EADatatype
EAExpression
	The mixed string EAExpression allow for modeling of expressions with references to elements in the model. Specializations within the metamodel define their syntax and the referred metaclasses used in the expressions.
	---------------------------------------------
	Value: String
	Type: _EADatatype
	Description: Text
EANumerical
	EANumerical has attributes for modeling of the allowed range.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
	Min: String
		The minimum value of the range. Decimal values should be specified with .
		---------------------------------------------
	Max: String
		The maximal value of the range. Decimal values should be specified with .
		---------------------------------------------
	Unit: Unit
		The unit of data.
		---------------------------------------------
	Description: Text
EAString
	EAString is the primitive type that defines a sequence of characters in some suitable character set used to display information.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
	Description: Text
ElectricalComponentType
	ElectricalComponent represents a hardware element as e.g. relays, batteries, capacitors and other non-computational, non-interactional (with plant) elements.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text
	IsActive: String
		Indicates if the PowerSupply is active or passive.
		---------------------------------------------
Enumeration
	Enumeration is a kind of datatype, whose instances may be any number > 1 of user-defined enumeration literals. Enumerations contain at least two literals, otherwise it would be a constant. The contained literals need to be ordered.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
	IsMultiValued: Boolean
		This boolean attribute is true, if multiple enumeration values can be selected. It is false, if only one enumeration value is allowed to be selected.
		---------------------------------------------
	Literals: OrderedCollection (String)
		Collection of literals (value) of the enumeration.
		---------------------------------------------
	Description: Text
GenericConstraintValue
	Store typed values in the model. The semantics of this element is defined by the element typed by the corresponding datatype.
	---------------------------------------------
	Value: String
	Type: _EADatatype
HardwareComponentType
	The HardwareComponentType represents hardware element on an abstract level, allowing preliminary engineering activities related to hardware.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text
Mode
	Modes are a way to introduce various configurations in the system to account for different states of the system, or of a hardware entity, or an application. The use of modes can be used to filter different views of the model. Modes are characterized by a Boolean condition provided as a String, which evaluates to true when the Mode is active. The Mode is active if and only if the condition is true.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Condition: String
		A Boolean expression that characterizes the Mode, it evaluates to true when the Mode is active. The syntax and grammar of this expression is unspecified.
		---------------------------------------------
	Description: Text
NodeType
	NodeType represents the computer nodes of the embedded electrical/electronic system. Nodes consist of processor(s) and may be connected to sensors, actuators and other ECUs via a BusConnector. Node denotes an electronic control unit that acts as a computing element executing Functions. In case a single CPU-single core ECU is represented, it is sufficient to have a single, non-hierarchical Node. 
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text
	ExecutionRate: String
		ExecutionRate is used to compute an approximate execution time. A nominal execution time divided by executionRate provides the actual execution time to be used e.g. for timing analysis in feasibility studies.
		---------------------------------------------
Quantity
	The Quantity describes a physical dimension for use in numerical datatypes and expressions to facilitate dimension consistency and control.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	AmountOfSubstanceExp: String
	ElectricCurrentExp: String
	LengthExp: String
	LuminousIntensityExp: String
	MassExp: String
	ThermodynamicTemperatureExp: String
	TimeExp: String
	Description: Text
RangeableValueType
	The RangeableValueType adds the ability to describe the accuracy, resolution, and the significant digits of the baseRangeable datatype.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
	Accuracy: String
		The accuracy of the data (e.g., the FunctionFlowports input or output).
		---------------------------------------------
	Resolution: String
		The resolution of the data expressed as the size of the minimum difference between data values.
		---------------------------------------------
	SignificantDigits: String
		SignificantDigits must be positive interger number.
		---------------------------------------------
	BaseRangeable: EANumerical
		The datatype with additional attributes specified by this concept.
		---------------------------------------------
	Description: Text
SensorType
	SensorType represents a hardware entity for digital or analog sensor elements. The Sensor is connected electrically to the electrical entities of the Hardware Design Architecture. 
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text
TimingExpression
	A Timing Expression, denoted by texp, is a term built from an arithmetic expression by applying an optional unit and referencing an optional time base. It stands for a value in the real number system extended with positive and negative infinity.
	---------------------------------------------
	Value: String
	Type: _EADatatype
	Description: Text
Unit
	Unit descibes the unit of typed numerical values.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Factor: String
	Offset: String
	Symbol: String
	Quantity: Quantity
	UnitReference: Unit
	Description: Text
UserAttributeDefinition
	The name of a UserAttributeDefinition should be used in editing tools as a label for the input field representing the user attribute and its description should be presented to the user to explain the meaning of this user attribute.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Default value: Value
	Type: _EADatatype
UserElementType
	UserElementType defines a certain set of user attributes.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Key: String
		Key is globally unique identifier.
		---------------------------------------------
	Valid for: Text
	User Attribute Definitions: OrderedCollection (UserAttributeDefinition)
	Description: Text
Value
	Value: String
	Type: _EADatatype
	Description: Text
_EADatatype
	EADatatype metaclass is a special kind of classifier, similar to a class. It differs from the class in that instances of a data type are identified only by their value.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
_HardwareComponents
	The HardwareComponentType is a structural entity that defines a part of an electrical architecture.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text
_HardwarePin
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
HardwarePin
	HardwarePin represents electrical connection points in the hardware architecture. Depending on modeling style, the actual wire or a logical connection can be considered.
	---------------------------------------------

==========================
Bindings
==========================
Comment
1	Comment: Comment, GenericConstraint, UserAttributedElement
1	Comment: HardwareComponentPrototype, HardwarePortConnector, Requirement, _HardwarePin
Comment
	Comment: HardwareComponentPrototype, HardwarePortConnector, Requirement, _HardwarePin
	Comment: Comment, GenericConstraint, UserAttributedElement
DeriveRequirement
	Derived: Requirement
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
	DerivedFrom: Requirement
HardwareConnector
1	CommunicationHardwarePin_From #(CommunicationHardwarePinInOut, CommunicationHardwarePinOut): HardwareComponentPrototype
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
1	CommunicationHardwarePin_To #(CommunicationHardwarePinIn, CommunicationHardwarePinInOut): HardwareComponentPrototype
HardwareConnector
1	CommunicationHardwarePin_From #(CommunicationHardwarePinInOut, CommunicationHardwarePinOut): HardwareComponentPrototype
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
1	CommunicationPort_To: CommunicationHardwarePinInOut, CommunicationHardwarePinOut
HardwareConnector
1	CommunicationPort_From: CommunicationHardwarePinIn, CommunicationHardwarePinInOut
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
1	CommunicationHardwarePin_To #(CommunicationHardwarePinIn, CommunicationHardwarePinInOut): HardwareComponentPrototype
HardwareConnector
1	InPower: PowerHardwarePinIn, PowerHardwarePinInOut
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
1	PowerHardwarePin_To #(PowerHardwarePinIn, PowerHardwarePinInOut): HardwareComponentPrototype
HardwareConnector
1	IOHardwarePin_From #(IOHardwarePinInOut, IOHardwarePinOut): HardwareComponentPrototype
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
1	IOHardwarePin_To #(IOHardwarePinIn, IOHardwarePinInOut): HardwareComponentPrototype
HardwareConnector
1	IOHardwarePin_From #(IOHardwarePinInOut, IOHardwarePinOut): HardwareComponentPrototype
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
1	IOPort_To: IOHardwarePinInOut, IOHardwarePinOut
HardwareConnector
1	IOPort_From: IOHardwarePinIn, IOHardwarePinInOut
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
1	IOHardwarePin_To #(IOHardwarePinIn, IOHardwarePinInOut): HardwareComponentPrototype
HardwareConnector
1	PowerHardwarePin_From #(PowerHardwarePinInOut, PowerHardwarePinOut): HardwareComponentPrototype
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
1	OutPower: PowerHardwarePinInOut, PowerHardwarePinOut
HardwareConnector
1	PowerHardwarePin_From #(PowerHardwarePinInOut, PowerHardwarePinOut): HardwareComponentPrototype
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
1	PowerHardwarePin_To #(PowerHardwarePinIn, PowerHardwarePinInOut): HardwareComponentPrototype
Realization
1	RealizedBy: HardwareComponentPrototype
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
1	Realized: HardwareComponentPrototype
Satisfy
	SatisfiedBy: HardwareComponentPrototype
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
	SatisfiedRequirement: Requirement
Satisfy
	SatisfiedRequirement: Requirement
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
	SatisfiedBy: HardwareComponentPrototype

==========================
Constraints
==========================
UserAttributedElement may be in at most 1 Comment relationship
Property "Short name" in CommunicationHardwarePinIn must have unique values
Property "Short name" in CommunicationHardwarePinInOut must have unique values
Property "Short name" in CommunicationHardwarePinOut must have unique values
Property "Short name" in HardwareComponentPrototype must have unique values
Property "Short name" in HardwarePortConnector must have unique values
Property "Short name" in IOHardwarePinIn must have unique values
Property "Short name" in IOHardwarePinInOut must have unique values
Property "Short name" in IOHardwarePinOut must have unique values
Property "Short name" in PowerHardwarePinIn must have unique values
Property "Short name" in PowerHardwarePinInOut must have unique values
Property "Short name" in PowerHardwarePinOut must have unique values
Property "Short name" in QualityRequirement must have unique values
Property "Short name" in Requirement must have unique values
Property "Short name" in UserAttributedElement must have unique values

==========================
Subgraphs
==========================
Decompositions:
	HardwareComponentPrototype
		HardwareComponentType

==========================
Generators
==========================
!Check
Check
TypeDeclaration
TypeUsers
Unconnected pins

==========================
Sub-Generators
==========================
_all checks
_checkings
_checkings for the graph
_hardwarePortConnectorCheck
_inCorrectPinTypes
_sensorsAndActuatorsInSeries
_sym LogicalBus
_SymAllocatedFunctions
_sym_isactive
_sym_PinInOutRoleLabel
_type of object
__LiveCheck

