==========================
Graph Type
==========================
ErrorModel
	EAST-ADL version M2.1.12
	The ErrorModelType represents a specification of the faults and fault propagations of its target element.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Show warnings: Boolean
	Description: Text

==========================
Object Types
==========================
ErrorBehavior
	ErrorBehavior defines the error propagation logic of its containing ErrorModelType. The ErrorBehavior is defined in the failureLogic string, either directly or as a URL referencing an external specification, or in separate subgraph. 
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	FailureLogic: Text
	Type: String
		ErrorBehaviorKind represents different formalisms for ErrorBehavior. The semantics are defined at each enumeration literal. 
		---------------------------------------------
	Description: Text
ErrorModelPrototype
	An ErrorModelPrototype represents an occurrence of the ErrorModelType that types it.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text
	functionTarget: OrderedCollection (_FunctionPrototype)
	hwTarget: OrderedCollection (HardwareComponentPrototype)
	Has error?: Boolean
InternalFaultPrototype
	The system anomaly represented by an InternalFault, which when activated, can cause errors and failures of the target element.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	isOfType: _EADatatype
	Description: Text
ProcessFaultPrototype
	The ProcessFaultPrototype represent general internal anomalies of a component that are introduced during design and implementation.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	isOfType: _EADatatype
	Description: Text
FaultInPort
	The FaultInPort represents a propagation point for faults that propagate to the containing ErrorModelType. The value range of a FaultInPort represents faults propagated from a FailureOutPort in another ErrorModel. The value range is defined by the FaultInPort's EADatatype.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Type: _EADatatype
FailureOutPort
	The FailureOutPort represents a propagation point for failures that propagate out from the containing ErrorModelType.The value range of a FailureOutPort represents failures that can propagate to FaultInPorts in other ErrorModels. The value range is defined by the FailureOutPort's EADatatype.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Type: _EADatatype
	functionTarget: OrderedCollection (_FunctionPort)
	hwTarget: OrderedCollection (_HardwarePin)
	Has error?: Boolean
Operator
	Specifies Boolean logic for error behavior.
	---------------------------------------------
	Operator: String
UserAttributedElement
	UserAttributedElement is used to attach user attribute values to model elements. What user attributes a certain element should be supplied with can be defined beforehand with UserElementTypes.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Values: OrderedCollection (Value)
	Types: OrderedCollection (UserElementType)
	Description: Text
GenericConstraint
	The GenericConstraint denotes a property, requirement, or a validation result for the identified element of the model.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Value: GenericConstraintValue
	Kind: String
	Modes: OrderedCollection (Mode)
		The mode(s) where this requirement is valid.
		---------------------------------------------
	TargetTypes: OrderedCollection (Graph)
	TargetObjects: OrderedCollection (Object)
	TargetRelationships: OrderedCollection (Relationship)
	Description: Text
Comment
	Commenting the metamodel or model, can be connected to all objects.
	---------------------------------------------
	Comment: String
	Description: Text

==========================
Relationship Types
==========================
FaultFailurePropagationLink
	The FaultFailurePropagationLink defines a Failure propagation path, from the fromPort on one error model to the toPort of another error model. 
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
	Name: String
	ImmediatePropagation: String
	Description: Text
Reference
	Reference denotes a reference link between two model elements.
	---------------------------------------------
Comment
	Comment creates a link between comment or constraint and other design element.
	---------------------------------------------

==========================
Role Types
==========================
FailureOut
FaultIn
Comment
referred_from
refer_to
ConditionTo
FailureKind
	ErrorKind links defines the error propagation logic related to the FailureOutPort within an ErrorModelType.  It is used to define the logic via Boolean operators, internal errorPrototypes, FaultInPorts or via other operators). 
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text

==========================
Extra Types
==========================
_EAST-ADL
	Abstract supertype of all EAST-ADL graph types
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
AnalysisFunctionPrototype
	The AnalysisFunctionPrototype represents an occurrence of the AnalysisFunctionType that types it via the submodel structure.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text
ArrayDatatype
	ArrayDatatype is a datatype for an array of datatypes of the same type.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
	MinLength: String
	MaxLength: String
	Type: _EADatatype
	Description: Text
ClientPort
	The ClientPort is a FunctionPort for client-server interaction. A number of ClientPorts can be connected to one ServerPort.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Type: FunctionClientServerInterface
		Type (FunctionClientServerInterface) is a needed property of Client and Server ports: it specifies operations in FunctionClientServerPorts.
		---------------------------------------------
	Description: Text
CommunicationHardwarePinIn
	CommunicationHardwarePinIn represents a directed electrical connection point that can be used to define how the wire harness is logically defined. 
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Description: Text
CommunicationHardwarePinInOut
	CommunicationHardwarePinInOut represents a bidirected electrical connection point that can be used to define how the wire harness is logically defined. 
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Description: Text
CommunicationHardwarePinOut
	CommunicationHardwarePinOut represents a directed electrical connection point that can be used to define how the wire harness is logically defined. 
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Description: Text
CompositeDatatype
	A CompositeDatatype represents a non-scalar datatype. The contained datatypePrototypes act as record variables to identify the ordered datatype instances of the tuple (the CompositeDatatype).
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
	DatatypePrototypes: OrderedCollection (EADatatypePrototype)
	Description: Text
DesignFunctionPrototype
	The DesignFunctionPrototype represents an occurrence of the DesignFunctionType that types it via the submodel structure.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text
EABoolean
	EABoolean is the primitive type that holds two literals: true, false.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
	Description: Text
EADatatypePrototype
	The EADatatypePrototype represents a typed variable. It acts as an appearance of a datatype.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Type: _EADatatype
EAExpression
	The mixed string EAExpression allow for modeling of expressions with references to elements in the model. Specializations within the metamodel define their syntax and the referred metaclasses used in the expressions.
	---------------------------------------------
	Value: String
	Type: _EADatatype
	Description: Text
EANumerical
	EANumerical has attributes for modeling of the allowed range.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
	Min: String
		The minimum value of the range. Decimal values should be specified with .
		---------------------------------------------
	Max: String
		The maximal value of the range. Decimal values should be specified with .
		---------------------------------------------
	Unit: Unit
		The unit of data.
		---------------------------------------------
	Description: Text
EAString
	EAString is the primitive type that defines a sequence of characters in some suitable character set used to display information.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
	Description: Text
Enumeration
	Enumeration is a kind of datatype, whose instances may be any number > 1 of user-defined enumeration literals. Enumerations contain at least two literals, otherwise it would be a constant. The contained literals need to be ordered.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
	IsMultiValued: Boolean
		This boolean attribute is true, if multiple enumeration values can be selected. It is false, if only one enumeration value is allowed to be selected.
		---------------------------------------------
	Literals: OrderedCollection (String)
		Collection of literals (value) of the enumeration.
		---------------------------------------------
	Description: Text
FunctionClientServerInterface
	The FunctionClientServerInterface is used to specify the operations in FunctionClientServerPorts.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Operations: OrderedCollection (Operation)
GenericConstraintValue
	Store typed values in the model. The semantics of this element is defined by the element typed by the corresponding datatype.
	---------------------------------------------
	Value: String
	Type: _EADatatype
HardwareComponentPrototype
	HardwareComponentPrototype presents an element of the hardware architecture. Its type is set in the subgraph and can be one of the following:
	The Actuator prototype is the element that represents electrical actuators, such as valves, motors, lamps, brake units, etc. It refers to the type definition via decomposed submodel.
	The Node protototype represents an ECU, i.e. an Electronic Control Unit, and an allocation target of FunctionPrototypes. Node represents the computer nodes of the embedded electrical/electronic system. Nodes consist of processor(s) and may be connected to sensors, actuators and other ECUs via a BusConnector. It refers to the type definition via decomposed submodel.
	ElectricalComponent prototype represents a hardware element that supplies power. It refers to the type definition via decomposed submodel.
	Sensor prototype represents a hardware entity for digital or analog sensor elements. It refers to the type definition via decomposed submodel.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text
InFlowPort
	The input FunctionFlowPort indicates that the containing Function requires input data. The EADatatype of this data is defined by the associated EADatatype. The data is sampled at the invocation of the containing entity for discrete Functions. For continuous Functions, the input FunctionFlowPort represents a continuous input connection point. The input FunctionFlowPort declares a reception point of data. It represents a single element buffer, which is overridden with the latest data. The type of the data is defined by the associated EADatatype.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text
	Type: _EADatatype
InOutFlowPort
	The input/Output FunctionFlowPort indicates a port that both provides and requires data. The EADatatype of this data is defined by the associated EADatatype. 
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text
	Type: _EADatatype
IOHardwarePinIn
	IOHardwarePin represents a directed electrical connection point for digital or analog I/O.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Type: String
		Defines whether the IOHardwarePin is digital, analog, PWM (Pulse Width Modulated) or other
		---------------------------------------------
	Description: Text
IOHardwarePinInOut
	IOHardwarePin represents a bi-directional electrical connection point for digital or analog I/O.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Type: String
		Defines whether the IOHardwarePin is digital, analog, PWM (Pulse Width Modulated) or other
		---------------------------------------------
	Description: Text
IOHardwarePinOut
	IOHardwarePin represents a directed electrical connection point for digital or analog I/O.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Type: String
		Defines whether the IOHardwarePin is digital, analog, PWM (Pulse Width Modulated) or other
		---------------------------------------------
	Description: Text
Mode
	Modes are a way to introduce various configurations in the system to account for different states of the system, or of a hardware entity, or an application. The use of modes can be used to filter different views of the model. Modes are characterized by a Boolean condition provided as a String, which evaluates to true when the Mode is active. The Mode is active if and only if the condition is true.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Condition: String
		A Boolean expression that characterizes the Mode, it evaluates to true when the Mode is active. The syntax and grammar of this expression is unspecified.
		---------------------------------------------
	Description: Text
Operation
	The Operation is the provided/required operation of a FunctionClientServerInterface.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Arguments: OrderedCollection (EADatatypePrototype)
	Return: EADatatypePrototype
	Comment: Text
OutFlowPort
	The output FunctionFlowPort indicates that the containing Function provides output data. The EADatatype of this data is defined by the associated EADatatype. The data is sent at the completion of the containing entity for discrete Functions. For continuous Functions, the output FunctionFlowPort represents a (time-)continuous output connection point. The output FunctionFlowPort declares a transmission point of data. The type of the data is defined by the associated EADatatype.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text
	Type: _EADatatype
PowerHardwarePinIn
	A PowerHardwarePinIn provides a point for consuming energy.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Description: Text
PowerHardwarePinInOut
	A PowerHardwarePinInOut provides a point for providing or consuming energy.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Description: Text
PowerHardwarePinOut
	A PowerHardwarePinOut provides a point for provding energy.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	IsGround: Boolean
		Indicates that the pin is connected to ground.
		---------------------------------------------
	Description: Text
PowerPort
	PowerPort denotes the physical interactions between environment and sensing/actuation functions. It conserves physical variables in a dynamic process. 
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Description: Text
	Type: CompositeDatatype
		Type value should be given
		---------------------------------------------
Quantity
	The Quantity describes a physical dimension for use in numerical datatypes and expressions to facilitate dimension consistency and control.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	AmountOfSubstanceExp: String
	ElectricCurrentExp: String
	LengthExp: String
	LuminousIntensityExp: String
	MassExp: String
	ThermodynamicTemperatureExp: String
	TimeExp: String
	Description: Text
RangeableValueType
	The RangeableValueType adds the ability to describe the accuracy, resolution, and the significant digits of the baseRangeable datatype.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
	Accuracy: String
		The accuracy of the data (e.g., the FunctionFlowports input or output).
		---------------------------------------------
	Resolution: String
		The resolution of the data expressed as the size of the minimum difference between data values.
		---------------------------------------------
	SignificantDigits: String
		SignificantDigits must be positive interger number.
		---------------------------------------------
	BaseRangeable: EANumerical
		The datatype with additional attributes specified by this concept.
		---------------------------------------------
	Description: Text
ServerPort
	The ServerPort is a FunctionPort for client-server interaction. A number of ClientPorts can be connected to one ServerPort.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Type: FunctionClientServerInterface
		Type (FunctionClientServerInterface) is a needed property of Client and Server ports: it specifies operations in FunctionClientServerPorts.
		---------------------------------------------
	Description: Text
TimingExpression
	A Timing Expression, denoted by texp, is a term built from an arithmetic expression by applying an optional unit and referencing an optional time base. It stands for a value in the real number system extended with positive and negative infinity.
	---------------------------------------------
	Value: String
	Type: _EADatatype
	Description: Text
Unit
	Unit descibes the unit of typed numerical values.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Factor: String
	Offset: String
	Symbol: String
	Quantity: Quantity
	UnitReference: Unit
	Description: Text
UserAttributeDefinition
	The name of a UserAttributeDefinition should be used in editing tools as a label for the input field representing the user attribute and its description should be presented to the user to explain the meaning of this user attribute.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Default value: Value
	Type: _EADatatype
UserElementType
	UserElementType defines a certain set of user attributes.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.
		---------------------------------------------
	Name: String
	Key: String
		Key is globally unique identifier.
		---------------------------------------------
	Valid for: Text
	User Attribute Definitions: OrderedCollection (UserAttributeDefinition)
	Description: Text
Value
	Value: String
	Type: _EADatatype
	Description: Text
_EADatatype
	EADatatype metaclass is a special kind of classifier, similar to a class. It differs from the class in that instances of a data type are identified only by their value.
	---------------------------------------------
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
	Short name: String
		Short name for datatype is mandatory and needs to follow the expression give above.
		---------------------------------------------
	Name: String
_FunctionPort
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
_FunctionPrototype
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
_HardwarePin
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
__ClientServerPort
	__UUID: String
		Globally unique identifier.
		---------------------------------------------
__FunctionFlowPort
	__UUID: String
		Globally unique identifier.
		---------------------------------------------

==========================
Bindings
==========================
Comment
	Comment: Comment, GenericConstraint, UserAttributedElement
	Comment: ErrorBehavior, ErrorModelPrototype, FailureOutPort, FaultInPort, InternalFaultPrototype, ProcessFaultPrototype
Comment
	Comment: ErrorBehavior, ErrorModelPrototype, FailureOutPort, FaultInPort, InternalFaultPrototype, ProcessFaultPrototype
	Comment: Comment, GenericConstraint, UserAttributedElement
FaultFailurePropagationLink
	FailureOut #(FailureOutPort): ErrorModelPrototype
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
	FaultIn #(FaultInPort): ErrorModelPrototype
FaultFailurePropagationLink
	FailureOut #(FailureOutPort): ErrorModelPrototype
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
	FaultIn: FailureOutPort
FaultFailurePropagationLink
	FailureOut: FaultInPort
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
	FaultIn #(FaultInPort): ErrorModelPrototype
Reference
	FailureKind: FaultInPort, InternalFaultPrototype, Operator, ProcessFaultPrototype
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
	refer_to: FailureOutPort
Reference
	referred_from: ErrorBehavior
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
	refer_to #(FailureOutPort): ErrorModelPrototype
Reference
	referred_from: ErrorBehavior
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
	refer_to #(FaultInPort): ErrorModelPrototype
Reference
	referred_from: ErrorBehavior
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
	refer_to: FailureOutPort, FaultInPort, InternalFaultPrototype, ProcessFaultPrototype
Reference
	referred_from: FaultInPort, InternalFaultPrototype, Operator, ProcessFaultPrototype
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
	ConditionTo: Operator
Reference
	refer_to: FailureOutPort, FaultInPort, InternalFaultPrototype, ProcessFaultPrototype
0..N	Comment: Comment, GenericConstraint, UserAttributedElement
	referred_from: ErrorBehavior

==========================
Constraints
==========================
Operator may be in at most 1 referred_from role
UserAttributedElement may be in at most 1 Comment relationship
Property "Short name" in ErrorBehavior must have unique values
Property "Short name" in ErrorModelPrototype must have unique values
Property "Short name" in FailureOutPort must have unique values
Property "Short name" in FaultInPort must have unique values
Property "Short name" in InternalFaultPrototype must have unique values
Property "Short name" in ProcessFaultPrototype must have unique values
Property "Short name" in UserAttributedElement must have unique values

==========================
Subgraphs
==========================
Decompositions:
	ErrorModelPrototype
		ErrorModel

==========================
Generators
==========================
!Check
!Unconnected ports
Check

==========================
Sub-Generators
==========================
_checkings
_sym_subTrace
_sym_trace
_type def
__LiveCheck

